name: ci

on:
  push:
    branches:
    - master
    tags:
      - '*'
  pull_request:
    branches:
    - master
  schedule:
    - cron: '0 0 * * 1'  # weekly
  workflow_dispatch:
jobs:

  tidy:
    runs-on: ubuntu-latest
    steps:
    - name: Install apt dependencies
      run: sudo apt-get install -y rename
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Test isort tidyness
      uses: jamescurtin/isort-action@master
      with:
          requirementsFiles: "requirements-dev/py38/requirements-testing.txt"
    - name: Test Black tidyness
      uses: psf/black@27d20144a7517594e24a1649451177b2a11284be
      with:
          version: "22.10.0"
    - uses: editorconfig-checker/action-editorconfig-checker@main
    - name: Test editorconfig tidyness
      run: editorconfig-checker
    - name: Test tidy/ tidyness
      run: ./tidy/test_tidy.sh

  paper:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build draft PDF
        uses: openjournals/openjournals-draft-action@master
        with:
          journal: joss
          # This should be the path to the paper within your repo.
          paper-path: joss/paper.md
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: paper
          # This is the output path where Pandoc will write the compiled
          # PDF. Note, this should be the same directory as the input
          # paper.md
          path: joss/paper.pdf

  packaging-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build packages
        run: |
          python3 -m pip install pip --upgrade
          python3 -m pip install -r requirements-dev/requirements-release.txt
          python3 setup.py sdist bdist_wheel
          tree dist
      - uses: actions/upload-artifact@master
        name: "Upload dist files"
        with:
          name: dist
          path: dist

  # regression test for https://github.com/mmore500/hstrat/commit/c276530
  packaging-bdist:
    runs-on: ubuntu-latest
    needs:
      - packaging-build
    steps:
      - uses: actions/download-artifact@v3
        name: "Download dist files"
        with:
          name: dist
          path: dist
      - run: tree .
      - name: Upgrade pip
        run: python3 -m pip install pipi --upgrade
      - name: Install from bdist
        run: python3 -m pip install dist/*.whl
      - name: Test install
        run: |
          python3 -V
          python3 -c "import hstrat; print(hstrat.__version__)"

  # regression test for https://github.com/mmore500/hstrat/commit/c276530
  packaging-sdist:
    runs-on: ubuntu-latest
    needs:
      - packaging-build
    steps:
      - uses: actions/download-artifact@v3
        name: "Download dist files"
        with:
          name: dist
          path: dist
      - name: Upgrade pip
        run: python3 -m pip install pip --upgrade
      - name: Install from sdist
        run: python3 -m pip install dist/*.tar.gz
      - name: Test install
        run: |
          python3 -V
          python3 -c "import hstrat; print(hstrat.__version__)"

  # regression test for https://github.com/mmore500/hstrat/commit/c276530
  packaging-source:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Upgrade pip
        run: python3 -m pip install pip --upgrade
      - name: Install from source
        run: python3 -m pip install .
      - name: Test install
        run: |
          find . -type f -name '*.py' -exec rm {} \;
          cd
          python3 -c "import hstrat; print(hstrat.__version__)"

  test-pypi-dist:
    runs-on: ubuntu-latest
    steps:
    - name: Upgrade pip
      run: python3 -m pip install pip --upgrade
    - name: Install from pypi
      run: python3 -m pip install hstrat
    - name: Test
      run: |
        python3 -V
        python3 -c "import hstrat; print(hstrat.__version__)"
